family tpl

sublanguage Velocity

initial IN_TPL_DEFAULT

keywords ["foreach", "return", "elseif", "if", "else", "case", "macro", "end", "stop", "break", "set", "parse", "config", "include", "evaluate", "define", "in", "true", "false"]
keyword_style TPL_DEFAULT => TPL_OPERATOR

pattern IDKW = '(foreach|return|elseif|if|else|case|macro|end|stop|break|set|parse|config|include|evaluate|define)'

state IN_TPL_DEFAULT:
'##'	: paint(upto, TPL_DEFAULT), => IN_TPL_COMMENT_1
'#*'	: paint(upto, TPL_DEFAULT), => IN_TPL_COMMENT_2
'$'		: paint(upto, TPL_DEFAULT), => IN_TPL_REFERENCE1
/\#[\{]?$IDKW[\}]?/    : paint(upto, TPL_DEFAULT), paint(include, TPL_OPERATOR), => IN_TPL_DIRECTIVE1
/('|")/	: paint(upto, TPL_DEFAULT), => IN_TPL_STRING
/[0-9]/	: paint(upto, TPL_DEFAULT), => IN_TPL_NUMBER_1

## Comments
state IN_TPL_COMMENT_1:
/[\r\n]/ : paint(upto, TPL_COMMENT), => IN_TPL_DEFAULT

state IN_TPL_COMMENT_2 :
'*#' : paint(include, TPL_COMMENTBLOCK), => IN_TPL_DEFAULT

## Numbers
state IN_TPL_NUMBER_1 :
/$/ : paint(upto, TPL_NUMBER), => IN_TPL_DEFAULT
'.' : => IN_TPL_NUMBER_2
/[\d]/ : #stay
/[Ee][-+]?/ : => IN_TPL_NUMBER_3
/./ : paint(upto, TPL_NUMBER), redo, => IN_TPL_DEFAULT

state IN_TPL_NUMBER_2:
/$/ : paint(upto, TPL_NUMBER), => IN_TPL_DEFAULT
/[\d]/ : #stay
/[Ee][-+]?/ : => IN_TPL_NUMBER_3
/./ : paint(upto, TPL_NUMBER), redo, => IN_TPL_DEFAULT

state IN_TPL_NUMBER_2b:
/$/ : paint(upto, TPL_OPERATOR), => IN_TPL_DEFAULT
/[\d]+/ : #stay
/[Ee][-+]?/ : => IN_TPL_NUMBER_3
/./ : paint(upto, TPL_OPERATOR), redo, => IN_TPL_DEFAULT

state IN_TPL_NUMBER_3:
/$/ : paint(upto, TPL_NUMBER), => IN_TPL_DEFAULT
/[^\d]/ : paint(upto, TPL_NUMBER), redo, => IN_TPL_DEFAULT

state IN_TPL_DIRECTIVE1:
/$/ : => IN_TPL_DEFAULT
/./ : => IN_TPL_DEFAULT

## References
state IN_TPL_REFERENCE1:
'}' : paint(include, TPL_IDENTIFIER), => IN_TPL_DEFAULT
/[^\!\{a-zA-Z0-9_\-\.]/	: paint(upto, TPL_IDENTIFIER), => IN_TPL_DEFAULT

## Strings
state IN_TPL_STRING:
/('|")/ : paint(include, TPL_STRING), => IN_TPL_DEFAULT
